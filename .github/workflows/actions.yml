# This is a basic workflow to help you get started with Actions

name: update ijava OpenJDK and miniforge

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # Runs every 5 minutes.
  # Runs at 00:00 UTC every day.
  # Actions schedules run at most every 5 minutes.
  schedule:
    # - cron: '*/5 * * * *'
    - cron: '15 0 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: 迁出代码
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      # Runs a single command using the runners shell
      - name: Run update.sh
        run: |
          docker create --rm --name "alpine-test" --platform "linux/arm64/v8" -v "/home/runner/work/docker-arm64-miniforge-jupyter/docker-arm64-miniforge-jupyter:/docker-arm64-miniforge-jupyter" alpine:latest ash -c "apk add curl grep sed wget tar xz pv bash coreutils ; cd /docker-arm64-miniforge-jupyter ; bash update.sh"
          docker start -i "alpine-test"
          
      - name: 'Get Date'
        run: |
          echo "REPORT_DATE=$(TZ=':Asia/Shanghai' date '+%Y-%m-%d %T')" >> $GITHUB_ENV

      - name: 提交更改
        run: |                 
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git pull origin master
          git add .
          git commit -a -m "${{env.REPORT_DATE}} 提交"
          
      - name: 推送更改
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          branch: master
